# upgrade system and install postgresql
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install postgresql-all postgresql-contrib
sudo shutdown -h now


# add new disks 500gb Standard persistent disk
# start server

# stop postgressql server
sudo systemctl stop postgresql@10-main.service

# format the new disk
# check that /dev/sdb is the correct id!
sudo mkfs.ext4 /dev/sdb

#label the disk
sudo e2label /dev/sdb devmirror-sql

# add the corresponding entry to /etc/fstab
# LABEL=devmirror-sql /var/lib/postgresql/10/ ext4 noatime,defaults 0 0

# mount the disk
sudo mount /var/lib/postgresql/10/
sudo chown postgres -R /var/lib/postgresql/10/
sudo -u postgres mkdir /var/lib/postgresql/10/wal
# edit /etc/postgresql/10/main/postgresql.conf
hot_standby = on
max_standby_streaming_delay = -1 # this allows indefinitely long selects on devmirror, however, this queries will prevent devmirror to be updated
listen_addresses = '*'
shared_preload_libraries = 'pg_stat_statements' # enable pg_stat_statements
pg_stat_statements.max = 10000 # the number of statements to track by pg_stat_statements
pg_stat_statements.track = all # tell pg_stat_statements to track all kinds of statemetns
track_activity_query_size = 2048 # the size of bytes that pg_stat_statements can use
checkpoint_completion_target = 0.8 # recommended by tuner
log_min_duration_statement = 1000 # track any query that takes longer than 1s
shared_buffers = 10448MB # set shared_buffer to 40% of system memory, as recommended by doc, minimum recommended is 25%
effective_cache_size = 13060MB # set to 50%

extra_float_digits = 3 # otherwise we might loose precision when reading from the database


# add the following line to /var/lib/postgresql/.pgpass
legendre.mit.edu:5432:*:postgres:password desired


# Now do as postgres
sudo -u postgres -i
mkdir /var/lib/postgresql/10/main/
pg_basebackup -h legendre.mit.edu -D /var/lib/postgresql/10/main/ -P -U postgres --wal-method=stream

# add the file /var/lib/postgresql/10/recovery.conf
  standby_mode = 'on'
  primary_conninfo = 'host=legendre.mit.edu port=5432 user=postgres'
  # assures that the master does not remove WAL segments until they have been received by all standbys
  primary_slot_name = 'devmirror'
  #restore_command = 'scp /var/lib/postgresql/10/wal/%f "%p"'
  archive_cleanup_command = 'pg_archivecleanup /var/lib/postgresql/10/wal %r'

# only allow external access to the lmfdb database and for the lmfdb user
# by adding the following 2 lines to the end of /etc/postgresql/10/main/pg_hba.conf
# External
host    lmfdb           lmfdb           0.0.0.0/0               md5
# proddb
host    all             all             35.184.77.196/32        md5
# internal
host    all             all             10.128.0.0/9        md5


# start the server
sudo systemctl start postgresql@10-main.service

# reboot the server and then check that everything is running as expected
sudo reboot


# the disk is mounted
df -h
# postgresql is running
systemctl status postgresql@10-main.service


sudo apt-get install logrotate


# munin
sudo apt-get install munin-node libdbd-pg-perl
echo allow 18.4.43.30 >> /etc/munin/munin-node.conf
echo host_name devmirror >> /etc/munin/munin-node.conf
echo host_name proddb >> /etc/munin/munin-node.conf
sudo systemctl restart munin-node.service


cd /usr/share/munin/plugins/
for i in postgres* ; do  ln -s /usr/share/munin/plugins/$i /etc/munin/plugins/ ; done
cd /etc/munin/plugins/
for i in postgres_*_ ; do mv $i ${i}lmfdb ; done


# apply https://github.com/munin-monitoring/munin/pull/897/commits/b6f193b97c80a4acd3e8ae89f98c1ae0be64ae8c
# in /usr/share/perl5/Munin/Plugin/





